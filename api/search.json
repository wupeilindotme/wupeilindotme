[{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2023-06-23T05:40:34.310Z","categories_index":"","tags_index":"","author_index":"Peilin"},{"id":"60483de8f62e71e12cab19b058a7262d","title":"Markdown学习","content":"Markdown 学习背景无论是使用Hexo、Hugo或是Jekyll搭建自己的博客写博文，还是用来编写文档，markdown语法的使用必不可少。 在本地可以下载 Typora — 一款支持markdown(md) 语法的编辑器， 可以更快速、更效率的编写md文档，这里就不过多介绍。  但如果是想在github 直接进行文档编写，那最好是要熟悉一下md语法。\n另外，如果需要编写docx \\ pdf 文档， 也可以使用markdown， 在编写完成后用插件转换即可。\n以下是正题\n\n语法文本标题可以看到本文的一些标题，就是用md语法实现的\n\nTypora中快捷键  Ctrl  1 2 3 4 5 6  为对应的标题 \n\n示例代码\n\n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n\n​\t当然你也可以使用html，得到的效果是一样的\n&lt;h1>这是一级标题&lt;/h1>\n&lt;h2>这是一级标题&lt;/h2>\n&lt;h3>这是一级标题&lt;/h3>\n&lt;h4>这是一级标题&lt;/h4>\n&lt;h5>这是一级标题&lt;/h5>\n&lt;h6>这是一级标题&lt;/h6>\n\n\n效果如下\n\n\n\n字体\n加粗\n\n说明：在文本两侧加 **；Typora快捷键： Ctrl  B\n\n示例代码 \n**我变粗了**\n\n\n斜体\n\n说明：在文本两侧加 *，Typora快捷键： Ctrl  I\n\n示例代码 \n*我变斜了*\n\n\n斜体加粗\n\n说明：在文本两侧加 ***\n\n示例代码 \n***我又斜又粗***\n\n\n删除\n\n说明：在文本两侧加 ~~ ；快捷键： Alt Shift 5  \n\n示例代码 \n~~我被删除了~~\n\n\n效果如下\n我变粗了\n我变斜了\n我又粗又斜\n我被删除了\n\n\n段落\n说明： 使用空格分隔一行或多行文本\n\n换行\n说明： 使用 &lt;br&gt; ，或者在结尾使用两个空格或多个空格结束一行\n\n代码单行代码\n说明 见代码\n\n代码\n使用 `` 引用起来\n如 `abc`\n\n效果\nabc\n\n\n代码块\n说明 使用 &#96;&#96;&#96; 加任意可识别的编程语言\n\n示例代码\n​```java\n\tpublic static void main(String[] args) &#123;\n\t\tSystem.out.println(\"Hello Peilin\");\n\t&#125;\n​```\n\n​```javascript\n    function hello() &#123;\n    \tconsole.log(\"Hello Peilin\")\n    &#125;\n​```\n\n\n\n效果\npublic static void main(String[] args) &#123;\n    System.out.println(\"Hello Peilin\");\n&#125;\n\nfunction hello() &#123;\n    console.log(\"Hello Peilin\")\n&#125;\n\n分割线\n说明：使用 三个以上的 - 或者 三个以上的 *\n\n代码\n***\n****\n---\n----\n\n图片\n说明\n其中 图片alt 为图片不能展示时展示的内容； url为图片的路径，可以是相对路径、绝对路径、网络路径； 图片名称为鼠标悬浮图片上展示内容\n\n代码\n![图片alt]('图片url' '图片名称')\n\n如\n\t\n![image-20230622235021158](markdown-learn/image-20230622235021158.png '皮皮猫')\n\n其中 图片alt 为图片不能展示时展示的内容； url为图片的路径，可以是相对路径、绝对路径、网络路径\n\n效果如下\n\n\n\n列表\n无序列表\n\n说明：在行首，使用 - * + 任意一个加空格 space ，接文本即可； 若想成为下一级，则在行首加Tab或者3个空格\n\n代码\n- 无序列表1\n\t- 无序列表1 子列表\n* 无序列表2\n+ 无序列表3\n\n效果\n\n\n\n\n有序列表\n\n说明：在行首 使用数字 . space 接文本即可\n\n代码\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n效果\n\n列表内容\n列表内容\n列表内容\n\n\n\n\n\n表格\n说明： 直接见代码\n\n代码\nname | age | gender\n--|:--:|--:\npipi | 4 | male\nhanhan | 2 | male\n\n:-- 左对齐\n--: 右对齐\n:--: 居中对齐\n\n效果\n\n\n\nname\nage\ngender\n\n\n\npipi\n4\nmale\n\n\nhanhan\n2\nmale\n\n\n\n\n链接\n代码\n[名称](地址)\n\n如\n\n[百度](https://www.baidu.com)\n\n百度\n\n说明\n通过上述方式创建的链接是页面内跳转。 如果想实现点击打开新标签页，则需要使用html a标签，具体代码如下\n&lt;a href=\"https://www.baidu.com\" target=\"_blank\">百度&lt;/a>\n\n百度\n\n\n转义\n说明： 在Markdown语法中有许多字符都表示着不同的功能，如果想使用原本字符，直接加 \\ 在该字符之前进行转义即可。 比如你想用 - 字符， 结果发现 - 加 空格就变成了无序列表，此时直接  \\- 即可。\n\n\n其他在markdown中， 同样可以使用html进行替代，但就编写文档而言，markdown语法更加精炼简洁，功能上也基本够用。 当然就像链接一样，可能有的功能达不到你的需求，这时候使用html可能就能满足你的需求。   \nmarkdown转pdf &#x2F; word 可以使用typora的自带导出功能。 也可以使用Pandoc\n\n欢迎补充指正，\n以上。\nBy Peilin\n— Life Oriented Programming —\n","slug":"markdown-learn","date":"2023-06-21T17:49:14.000Z","categories_index":"","tags_index":".md","author_index":"Peilin"}]