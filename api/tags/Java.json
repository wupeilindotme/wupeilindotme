{"name":"Java","slug":"Java","count":3,"postlist":[{"title":"Java异步编程","uid":"24d9916b82108a815fcb896c7754eb78","slug":"async","date":"2023-09-11T14:22:05.000Z","updated":"2024-05-09T02:57:39.929Z","comments":true,"path":"api/articles/async.json","keywords":null,"cover":[],"text":"Java实现异步编程前言在开发过程中，异步很常见。相比同步执行，异步可以提升执行效率，大大降低请求链路时间，提升用户体验。 比如在发送短信、发送邮件等业务场景中可以用到异步。 什么是异步？通过一个例子来解释： 假如有如下应用场景 这个业务逻辑线是同步执行， 意味着 发送短信 这一...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"author":{"name":"Peilin","slug":"blog-author","avatar":"https://www.z4a.net/images/2023/06/23/image-20230622235021158.png","link":"/","description":"Life Oriented Programming","socials":{"github":"https://github.com/wupeilindotme","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Java实现树形接口","uid":"d696be916da802ad82e97dd238415af6","slug":"java-tree-node","date":"2023-07-05T16:33:32.000Z","updated":"2024-05-09T02:57:39.937Z","comments":true,"path":"api/articles/java-tree-node.json","keywords":null,"cover":null,"text":"Java实现树形接口前言做后端开发，遇到树形结构的情况可以说是非常多。菜单、部门机构等都会用到。 这种经常遇见且通用的功能无需针对每个业务去写冗余代码，本文就介绍一下如何实现一个通用的树形结构，将集合树形化。 注：JDK版本需要在1.8以上 思想 在关系型数据库表中实现树形父子级...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"后端","slug":"后端","count":1,"path":"api/tags/后端.json"},{"name":"技巧分享","slug":"技巧分享","count":1,"path":"api/tags/技巧分享.json"}],"author":{"name":"Peilin","slug":"blog-author","avatar":"https://www.z4a.net/images/2023/06/23/image-20230622235021158.png","link":"/","description":"Life Oriented Programming","socials":{"github":"https://github.com/wupeilindotme","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot Test单元测试","uid":"87a20f152595f7bf883ebf6f1ddb89ed","slug":"springboot-test","date":"2023-07-18T09:34:12.000Z","updated":"2024-05-09T02:57:39.937Z","comments":true,"path":"api/articles/springboot-test.json","keywords":null,"cover":null,"text":"不要忽视任何一个小的BUG，这将可能带来灾难 前言单元测试的必要性在工作中有时候会问同事关于单元测试，得到如下回答： 感觉项目挺赶工期的，就算想也没有时间写单元测试 项目业务简单，感觉没有写单元测试的必要 不知道如何写单元测试，还不如就直接调用接口测试 公司有专业测试人员，到时候...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"},{"name":"单元测试","slug":"单元测试","count":1,"path":"api/tags/单元测试.json"}],"author":{"name":"Peilin","slug":"blog-author","avatar":"https://www.z4a.net/images/2023/06/23/image-20230622235021158.png","link":"/","description":"Life Oriented Programming","socials":{"github":"https://github.com/wupeilindotme","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}